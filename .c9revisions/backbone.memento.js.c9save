{"ts":1352363292494,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"// Backbone.Memento v0.3.0\n//\n// Copyright (C)2011 Derick Bailey, Muted Solutions, LLC\n// Distributed Under MIT Liscene\n//\n// Documentation and Full Licence Availabe at:\n// http://github.com/derickbailey/backbone.memento\n\n// ----------------------------\n// Backbone.Memento\n// ----------------------------\nBackbone.Memento = (function(){\n\n  var Memento = function(structure, config) {\n\n  this.version = \"0.3.0\";\n\n  config = _.extend({\n    ignore: []\n  }, config);\n\n  var attributeStack;\n  var type = (structure instanceof Backbone.Model) ? \"model\" : \"collection\";\n\n  function getAddedAttrDiff(newAttrs, oldAttrs){\n    var removedAttrs = [];\n\n    // guard clause to ensure we have attrs to compare\n    if (!newAttrs || !oldAttrs){\n      return removedAttrs;\n    }\n\n    // if the attr is found in the old set but not in\n    // the new set, then it was remove in the new set\n    for (var attr in oldAttrs){\n      if (oldAttrs.hasOwnProperty(attr)){\n        if (!newAttrs.hasOwnProperty(attr)){\n          removedAttrs.push(attr);\n        }\n      }\n    }\n\n    return removedAttrs;\n  }\n\n  function removeAttributes(structure, attrsToRemove){\n    for (var index in attrsToRemove){\n      var attr = attrsToRemove[index];\n      if (type === \"model\"){\n        structure.unset(attr);\n      } else {\n        structure.remove(attr);\n      }\n    }\n  }\n\n  function restoreState(last, restoreConfig){\n    //get the previous state\n    var oldAttrs = attributeStack[last];\n    if (oldAttrs === undefined){ return; }\n\n    oldAttrs = dropIgnored(oldAttrs, restoreConfig);\n\n    //get the current state\n    var currentAttrs = structure.toJSON();\n    currentAttrs = dropIgnored(currentAttrs, restoreConfig);\n\n    //handle removing attributes that were added\n    var removedAttrs = getAddedAttrDiff(oldAttrs, currentAttrs);\n    removeAttributes(structure, removedAttrs);\n\n    //restore the previous state\n    if (type === \"model\"){\n      structure.set(oldAttrs);\n    } else {\n      structure.reset(oldAttrs);\n    }\n\n    //destroy the no-longer-current state\n    delete attributeStack[last];\n  }\n\n  function dropIgnored(attrs, restoreConfig){\n    attrs = _.clone(attrs);\n    if (restoreConfig.hasOwnProperty(\"ignore\") && restoreConfig.ignore.length > 0){\n      for(var index in restoreConfig.ignore){\n        var ignore = restoreConfig.ignore[index];\n        delete attrs[ignore];\n      }\n    }\n    return attrs;\n  }\n\n  function initialize(){\n    attributeStack = [];\n  }\n\n  this.store = function(){\n    var attrs = structure.toJSON();\n\n    attrs = dropIgnored(attrs, config);\n\n    attributeStack.push(attrs);\n  }\n  \n  this.restore = function(restoreConfig){\n    if (restoreConfig === undefined){\n      restoreConfig = _.clone(config);\n    }\n\n    var last = attributeStack.length-1;\n    if (last < 0){\n      return null;\n    }\n\n    restoreState(last, restoreConfig);\n  }\n\n  this.restart = function(){\n    if(attributeStack.length === 0){\n      return null;\n    }\n    restoreState(0, config);\n    // restoreState deleted item 0, but really \n    // we should be starting from scratch.\n    initialize();\n  }\n\n  // For backwards compatibility, collections cannot have a property\n  // named reset for conflict reasons.\n  if (type === \"model\"){\n    this.reset = this.restart;\n  }\n\n  initialize();\n  };\n  \n  return Memento;\n  \n})();"]],"start1":0,"start2":0,"length1":0,"length2":3300}]],"length":3300}
{"contributors":[],"silentsave":false,"ts":1352363313501,"patch":[[{"diffs":[[0,"attrs);\n"],[1,"    \n    console.log(attributeStack);\n"],[0,"  }\n  \n "]],"start1":2577,"start2":2577,"length1":16,"length2":54}]],"length":3338,"saved":false}
{"ts":1352363817570,"patch":[[{"diffs":[[0,"ento v0."],[-1,"3"],[1,"4"],[0,".0\n//\n//"]],"start1":15,"start2":15,"length1":17,"length2":17},{"diffs":[[0,"unction("],[-1,""],[1,"Backbone, _"],[0,"){\n\n  va"]],"start1":327,"start2":327,"length1":16,"length2":27},{"diffs":[[0,"nfig) {\n"],[-1,"\n"],[1,"  "],[0,"  this.v"]],"start1":388,"start2":388,"length1":17,"length2":18},{"diffs":[[0," \"0."],[-1,"3"],[1,"4"],[0,".0\";\n\n"],[1,"  "],[0,"  co"]],"start1":414,"start2":414,"length1":15,"length2":17},{"diffs":[[0,"nd({"],[-1,"\n   "],[0," ignore:"],[-1," "],[0,"[]"],[-1,"\n "],[0," }, "]],"start1":444,"start2":444,"length1":25,"length2":18},{"diffs":[[0,");\n\n"],[1,"  "],[0,"  var "],[-1,"attributeStack;\n"],[1,"serializer = new Serializer(structure, config);\n    var mementoStack = new MementoStack(structure, config, serializer);\n\n    this.store = mementoStack.store;\n    this.restore = mementoStack.restore;\n    this.restart = mementoStack.restart;\n  };\n\n  var Serializer = function(structure, config) {\n  "],[0,"  va"]],"start1":468,"start2":468,"length1":30,"length2":313},{"diffs":[[0,"tion\";\n\n"],[1,"  "],[0,"  functi"]],"start1":847,"start2":847,"length1":16,"length2":18},{"diffs":[[0," oldAttrs){\n"],[1,"  "],[0,"    var remo"]],"start1":894,"start2":894,"length1":24,"length2":26},{"diffs":[[0,"];\n\n    "],[1,"  "],[0,"// guard"]],"start1":932,"start2":932,"length1":16,"length2":18},{"diffs":[[0,"compare\n    "],[1,"  "],[0,"if (!newAttr"]],"start1":985,"start2":985,"length1":24,"length2":26},{"diffs":[[0,"trs){\n      "],[1,"  "],[0,"return remov"]],"start1":1022,"start2":1022,"length1":24,"length2":26},{"diffs":[[0,"dAttrs;\n    "],[1,"  "],[0,"}\n\n"],[1,"  "],[0,"    // if th"]],"start1":1049,"start2":1049,"length1":27,"length2":31},{"diffs":[[0," in\n    "],[1,"  "],[0,"// the n"]],"start1":1118,"start2":1118,"length1":16,"length2":18},{"diffs":[[0,"new set\n"],[1,"  "],[0,"    for "]],"start1":1170,"start2":1170,"length1":16,"length2":18},{"diffs":[[0,"trs){\n      "],[1,"  "],[0,"if (oldAttrs"]],"start1":1206,"start2":1206,"length1":24,"length2":26},{"diffs":[[0,")){\n        "],[1,"  "],[0,"if (!newAttr"]],"start1":1252,"start2":1252,"length1":24,"length2":26},{"diffs":[[0,"{\n          "],[1,"  "],[0,"removedAttrs"]],"start1":1301,"start2":1301,"length1":24,"length2":26},{"diffs":[[0,"r);\n        "],[-1,"}\n"],[1,"  }\n  "],[0,"      }\n    "]],"start1":1336,"start2":1336,"length1":26,"length2":30},{"diffs":[[0,"      }\n    "],[1,"  "],[0,"}\n\n"],[1,"  "],[0,"    return r"]],"start1":1354,"start2":1354,"length1":27,"length2":31},{"diffs":[[0,"movedAttrs;\n"],[1,"  "],[0,"  }\n\n"],[1,"  "],[0,"  function r"]],"start1":1386,"start2":1386,"length1":29,"length2":33},{"diffs":[[0,"sToRemove){\n"],[1,"  "],[0,"    for (var"]],"start1":1450,"start2":1450,"length1":24,"length2":26},{"diffs":[[0,"ove){\n      "],[1,"  "],[0,"var attr = a"]],"start1":1496,"start2":1496,"length1":24,"length2":26},{"diffs":[[0,"dex];\n      "],[1,"  "],[0,"if (type ==="]],"start1":1537,"start2":1537,"length1":24,"length2":26},{"diffs":[[0,"= \"model\"){\n"],[1,"  "],[0,"        stru"]],"start1":1562,"start2":1562,"length1":24,"length2":26},{"diffs":[[0,"ttr);\n      "],[1,"  "],[0,"} else {\n   "]],"start1":1601,"start2":1601,"length1":24,"length2":26},{"diffs":[[0,"   } else {\n"],[1,"  "],[0,"        stru"]],"start1":1612,"start2":1612,"length1":24,"length2":26},{"diffs":[[0,"    "],[-1,"}\n"],[1,"  }\n  "],[0,"    }\n"],[1,"  "],[0,"  }\n\n  "],[1,"  "],[0,"func"]],"start1":1660,"start2":1660,"length1":23,"length2":31},{"diffs":[[0,"ion "],[-1,"restoreState(last, restoreConfig){\n    //get the previous state\n    var oldAttrs = attributeStack[last];\n    if (oldAttrs === undefined){ return; }\n\n"],[1,"dropIgnored(attrs, restoreConfig){\n      attrs = _.clone(attrs);\n      if (restoreConfig.hasOwnProperty(\"ignore\") && restoreConfig.ignore.length > 0){\n        for(var index in restoreConfig.ignore){\n          var ignore = restoreConfig.ignore[index];\n          delete attrs[ignore];\n        }\n      }\n      return attrs;\n    }\n\n    function restoreState(previousState, restoreConfig){\n  "],[0,"    "]],"start1":1692,"start2":1692,"length1":157,"length2":395},{"diffs":[[0,"Ignored("],[-1,"oldAttrs"],[1,"previousState"],[0,", restor"]],"start1":2102,"start2":2102,"length1":24,"length2":29},{"diffs":[[0,");\n\n    "],[1,"  "],[0,"//get th"]],"start1":2138,"start2":2138,"length1":16,"length2":18},{"diffs":[[0,"rrent state\n"],[1,"  "],[0,"    var curr"]],"start1":2160,"start2":2160,"length1":24,"length2":26},{"diffs":[[0,"();\n    "],[1,"  "],[0,"currentA"]],"start1":2213,"start2":2213,"length1":16,"length2":18},{"diffs":[[0,");\n\n    "],[1,"  "],[0,"//handle"]],"start1":2277,"start2":2277,"length1":16,"length2":18},{"diffs":[[0,"e added\n"],[1,"  "],[0,"    var "]],"start1":2324,"start2":2324,"length1":16,"length2":18},{"diffs":[[0,"Attrs);\n    "],[1,"  "],[0,"removeAttrib"]],"start1":2391,"start2":2391,"length1":24,"length2":26},{"diffs":[[0,"vedAttrs);\n\n"],[1,"  "],[0,"    //restor"]],"start1":2437,"start2":2437,"length1":24,"length2":26},{"diffs":[[0,"s state\n    "],[1,"  "],[0,"if (type ==="]],"start1":2476,"start2":2476,"length1":24,"length2":26},{"diffs":[[0,"= \"model\"){\n"],[1,"  "],[0,"      struct"]],"start1":2501,"start2":2501,"length1":24,"length2":26},{"diffs":[[0,"Attrs);\n    "],[1,"  "],[0,"} else {\n   "]],"start1":2538,"start2":2538,"length1":24,"length2":26},{"diffs":[[0,"lse {\n      "],[1,"  "],[0,"structure.re"]],"start1":2555,"start2":2555,"length1":24,"length2":26},{"diffs":[[0,"    "],[-1,"}\n\n    //destroy the no-longer-current state\n    delete attributeStack[last];\n  }\n\n  function"],[1,"  }\n    }\n\n    this.serialize = function() {\n      var attrs = structure.toJSON();\n      attrs ="],[0," dro"]],"start1":2596,"start2":2596,"length1":101,"length2":104},{"diffs":[[0,"rs, "],[-1,"restoreC"],[1,"c"],[0,"onfig)"],[-1,"{"],[1,";\n"],[0,"\n    "],[-1,"attrs = _.clone("],[1,"  return "],[0,"attrs"],[-1,")"],[0,";\n    "],[-1,"if (restoreConfig.hasOwnProperty(\"ignore\") && restoreConfig.ignore.length > 0){\n      for(var index in restoreConfig.ignore){\n        var ignore = restoreConfig.ignore[index];\n        delete attrs[ignore];\n      }\n    }\n    return attrs;\n  }\n\n"],[1,"}\n\n    this.deserialize = function(previousState, restoreConfig) {\n      restoreState(previousState, restoreConfig);\n    }\n  };\n\n  var MementoStack = function(structure, config, serializer) {\n\n    var attributeStack;\n\n  "],[0,"  fu"]],"start1":2712,"start2":2712,"length1":299,"length2":262},{"diffs":[[0,"itialize(){\n"],[1,"  "],[0,"    attribut"]],"start1":2983,"start2":2983,"length1":24,"length2":26},{"diffs":[[0,"k = [];\n"],[1,"  "],[0,"  }\n\n"],[1,"  "],[0,"  this.s"]],"start1":3014,"start2":3014,"length1":21,"length2":25},{"diffs":[[0,"tion(){\n    "],[1,"  "],[0,"var attrs = "]],"start1":3050,"start2":3050,"length1":24,"length2":26},{"diffs":[[0," = s"],[-1,"tructure.toJSON();\n\n    attrs = dropIgnored(attrs, config);\n\n"],[1,"erializer.serialize();\n  "],[0,"    "]],"start1":3073,"start2":3073,"length1":69,"length2":33},{"diffs":[[0,"    "],[1,"}\n"],[0,"\n  "],[-1,"  console.log(attributeStack);\n  }\n  \n"],[0,"  th"]],"start1":3134,"start2":3134,"length1":49,"length2":13},{"diffs":[[0,"onfig){\n    "],[1,"  "],[0,"if (restoreC"]],"start1":3177,"start2":3177,"length1":24,"length2":26},{"diffs":[[0,"ned){\n      "],[1,"  "],[0,"restoreConfi"]],"start1":3219,"start2":3219,"length1":24,"length2":26},{"diffs":[[0,"onfig);\n    "],[1,"  "],[0,"}\n\n"],[1,"  "],[0,"    var last"]],"start1":3258,"start2":3258,"length1":27,"length2":31},{"diffs":[[0,"ngth-1;\n    "],[1,"  "],[0,"if (last < 0"]],"start1":3309,"start2":3309,"length1":24,"length2":26},{"diffs":[[0,"(last < 0){\n"],[1,"  "],[0,"      return"]],"start1":3326,"start2":3326,"length1":24,"length2":26},{"diffs":[[0,"ll;\n    "],[1,"  "],[0,"}\n\n    "],[1,"  "],[0,"restoreS"]],"start1":3355,"start2":3355,"length1":23,"length2":27},{"diffs":[[0,"onfig);\n"],[1,"  "],[0,"  }\n\n"],[1,"    var restoreState = function(last, restoreConfig) {\n      //get the previous state\n      var oldAttrs = attributeStack[last];\n      if (oldAttrs === undefined){ return; }\n\n      serializer.deserialize(oldAttrs, restoreConfig);\n\n      //destroy the no-longer-current state\n      delete attributeStack[last];\n    }\n\n  "],[0,"  this.r"]],"start1":3401,"start2":3401,"length1":21,"length2":342},{"diffs":[[0,"function(){\n"],[1,"  "],[0,"    if(attri"]],"start1":3752,"start2":3752,"length1":24,"length2":26},{"diffs":[[0,"= 0){\n      "],[1,"  "],[0,"return null;"]],"start1":3797,"start2":3797,"length1":24,"length2":26},{"diffs":[[0,"n null;\n    "],[-1,"}\n"],[1,"  }\n  "],[0,"    restoreS"]],"start1":3816,"start2":3816,"length1":26,"length2":30},{"diffs":[[0,"0, config);\n"],[1,"  "],[0,"    // resto"]],"start1":3851,"start2":3851,"length1":24,"length2":26},{"diffs":[[0,"t really"],[-1," "],[0,"\n"],[1,"  "],[0,"    // w"]],"start1":3903,"start2":3903,"length1":18,"length2":19},{"diffs":[[0,"ch.\n    "],[1,"  "],[0,"initiali"]],"start1":3953,"start2":3953,"length1":16,"length2":18},{"diffs":[[0,";\n  "],[-1,"}\n\n  // For backwards compatibility, collections cannot have a property\n  // named reset for conflict reasons.\n  if (type === \"model\"){\n    this.reset = this.restart;\n"],[0,"  }\n\n"],[1,"  "],[0,"  in"]],"start1":3975,"start2":3975,"length1":180,"length2":15},{"diffs":[[0,");\n  };\n"],[-1,"  "],[1,""],[0,"\n  retur"]],"start1":3999,"start2":3999,"length1":18,"length2":16},{"diffs":[[0,"to;\n"],[-1,"  "],[0,"\n})("],[1,"Backbone, _"],[0,");"]],"start1":4022,"start2":4022,"length1":12,"length2":21}]],"length":4043,"saved":false}
